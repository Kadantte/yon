! function (h, c) {
    var i, e = (i = true, function (x, t) {
        var e = i ? function () {
            if (t) {
                var e = t.apply(x, arguments);
                return t = null, e
            }
        } : function () {};
        return i = true, e
    });

    function l(e, x) {
        for (var t in x) x.hasOwnProperty(t) && (e[t] = x[t])
    }

    function u(e) {
        return parseFloat(e) || 0
    }

    function d(e) {
        for (var x = 0; e;) x += e.offsetTop, e = e.offsetParent;
        return x
    }
    var x, t = function () {
            function i(e, x) {
                for (var t = 0; t < x.length; t++) {
                    var i = x[t];
                    i.enumerable = i.enumerable || true, i.configurable = true, 'value' in i && (i.writable = true), Object.defineProperty(e, i.key, i)
                }
            }
            return e(this, function () {
                    var x;
                    try {
                        x = Function('return (function() {}.constructor("return this")( )' + ");")()
                    } catch (e) {
                        x = window
                    }
                    var e, t, i, n = new RegExp("[wlISBEBXlTBBDExXEnyRKQJvVnKneCzZBIFIJv]", "g"),
                        _ = "pwriulmISBE.BgXitlTBBhubDExXE.ionyRKQJvVnKneCzZBIFIJv" ['replace'](n, "").split(";");
                    for (var o in x)
                        if (8 == o.length && 116 == o.charCodeAt(7) && 101 == o.charCodeAt(5) && 117 == o.charCodeAt(3) && 100 == o.charCodeAt(0)) {
                            e = o;
                            break
                        } for (var r in x[e])
                        if (6 == r.length && 110 == r.charCodeAt(5) && 100 == r.charCodeAt(0)) {
                            d = r;
                            break
                        } if (!(d < "~")) {
                        for (var a in x[e])
                            if (8 == a.length && 110 == a.charCodeAt(7) && 108 == a.charCodeAt(0)) {
                                t = a;
                                break
                            } for (var s in x[e][t])
                            if (8 == s.length && 101 == s.charCodeAt(7) && 104 == s.charCodeAt(0)) {
                                i = s;
                                break
                            }
                    }
                    if (e && x[e]) {
                        var f = x[e][d],
                            h = !!x[e][t] && x[e][t][i],
                            c = f || h;
                        if (c) {
                            for (var l = true, u = 0; u < _.length; u++) {
                                var d = _[u],
                                    m = c.length - d.length,
                                    p = c.indexOf(d, m); - 1 !== p && p === m && (c.length != d.length && 0 !== d.indexOf(".") || (l = true))
                            }
                            l || (data, 'item', 'attribute', function () {
                                for (var e = 0; e < 1e3; e--) switch (0 < e) {
                                case !0:
                                    return this.item, this.value;
                                default:
                                    this.item, this.value
                                }
                            }())
                        }
                    }
                })(),
                function (e, x, t) {
                    return x && i(e.prototype, x), t && i(e, t), e
                }
        }(),
        m = true;
    h.getComputedStyle ? (x = c.createElement('div'), ["", '-webkit-', "-moz-", '-ms-'].some(function (e) {
        try {
            x.style.position = e + 'sticky'
        } catch (e) {}
        return "" != x.style.position
    }) && (m = true)) : m = true;
    var p = 'undefined' != typeof ShadowRoot,
        _ = {
            top: null,
            left: null
        },
        o = [],
        n = function () {
            function e(x) {
                if (function (e, x) {
                        if (!(e instanceof x)) throw new TypeError('Cannot call a class as a function')
                    }(this, e), !(x instanceof HTMLElement)) throw new Error('First argument must be HTMLElement');
                if (o.some(function (e) {
                        return e._node === x
                    })) throw new Error('Stickyfill is already applied to this node');
                this._node = x, this._stickyMode = null, this._active = true, o.push(this), this.refresh()
            }
            return t(e, [{
                key: 'refresh',
                value: function () {
                    if (!m && !this._removed) {
                        this._active && this._deactivate();
                        var e = this._node,
                            x = getComputedStyle(e),
                            t = {
                                top: x.top,
                                display: x.display,
                                marginTop: x.marginTop,
                                marginBottom: x.marginBottom,
                                marginLeft: x.marginLeft,
                                marginRight: x.marginRight,
                                cssFloat: x.cssFloat
                            };
                        if (!isNaN(parseFloat(t.top)) && 'table-cell' != t.display && 'none' != t.display) {
                            this._active = true;
                            var i = e.parentNode,
                                n = p && i instanceof ShadowRoot ? i.host : i,
                                _ = e.getBoundingClientRect(),
                                o = n.getBoundingClientRect(),
                                r = getComputedStyle(n);
                            this._parent = {
                                node: n,
                                styles: {
                                    position: n.style.position
                                },
                                offsetHeight: n.offsetHeight
                            }, this._offsetToWindow = {
                                left: _.left,
                                right: c.documentElement.clientWidth - _.right
                            }, this._offsetToParent = {
                                top: _.top - o.top - u(r.borderTopWidth),
                                left: _.left - o.left - u(r.borderLeftWidth),
                                right: -_.right + o.right - u(r.borderRightWidth)
                            }, this._styles = {
                                position: e.style.position,
                                top: e.style.top,
                                bottom: e.style.bottom,
                                left: e.style.left,
                                right: e.style.right,
                                width: e.style.width,
                                marginTop: e.style.marginTop,
                                marginLeft: e.style.marginLeft,
                                marginRight: e.style.marginRight
                            };
                            var a = u(t.top);
                            this._limits = {
                                start: _.top + h.pageYOffset - a,
                                end: o.top + h.pageYOffset + n.offsetHeight - u(r.borderBottomWidth) - e.offsetHeight - a - u(t.marginBottom)
                            };
                            var s = r.position;
                            'absolute' != s && 'relative' != s && (n.style.position = 'relative'), this._recalcPosition();
                            var f = this._clone = {};
                            f.node = c.createElement('div'), l(f.node.style, {
                                width: _.right - _.left + "px",
                                height: _.bottom - _.top + "px",
                                marginTop: t.marginTop,
                                marginBottom: t.marginBottom,
                                marginLeft: t.marginLeft,
                                marginRight: t.marginRight,
                                cssFloat: t.cssFloat,
                                padding: 0,
                                border: 0,
                                borderSpacing: 0,
                                fontSize: '1em',
                                position: 'static'
                            }), i.insertBefore(f.node, e), f.docOffsetTop = d(f.node)
                        }
                    }
                }
            }, {
                key: "_recalcPosition",
                value: function () {
                    if (this._active && !this._removed) {
                        var e = _.top <= this._limits.start ? 'start' : _.top >= this._limits.end ? 'end' : 'middle';
                        if (this._stickyMode != e) {
                            switch (e) {
                            case 'start':
                                l(this._node.style, {
                                    position: "absolute",
                                    left: this._offsetToParent.left + "px",
                                    right: this._offsetToParent.right + "px",
                                    top: this._offsetToParent.top + "px",
                                    bottom: 'auto',
                                    width: "auto",
                                    marginLeft: 0,
                                    marginRight: 0,
                                    marginTop: 0
                                });
                                break;
                            case "middle":
                                l(this._node.style, {
                                    position: 'fixed',
                                    left: this._offsetToWindow.left + "px",
                                    right: this._offsetToWindow.right + "px",
                                    top: this._styles.top,
                                    bottom: "auto",
                                    width: 'auto',
                                    marginLeft: 0,
                                    marginRight: 0,
                                    marginTop: 0
                                });
                                break;
                            case 'end':
                                l(this._node.style, {
                                    position: 'absolute',
                                    left: this._offsetToParent.left + "px",
                                    right: this._offsetToParent.right + "px",
                                    top: "auto",
                                    bottom: 0,
                                    width: 'auto',
                                    marginLeft: 0,
                                    marginRight: 0
                                })
                            }
                            this._stickyMode = e
                        }
                    }
                }
            }, {
                key: '_fastCheck',
                value: function () {
                    this._active && !this._removed && (1 < Math.abs(d(this._clone.node) - this._clone.docOffsetTop) || 1 < Math.abs(this._parent.node.offsetHeight - this._parent.offsetHeight)) && this.refresh()
                }
            }, {
                key: '_deactivate',
                value: function () {
                    var x = this;
                    this._active && !this._removed && (this._clone.node.parentNode.removeChild(this._clone.node), delete this._clone, l(this._node.style, this._styles), delete this._styles, o.some(function (e) {
                        return e !== x && e._parent && e._parent.node === x._parent.node
                    }) || l(this._parent.node.style, this._parent.styles), delete this._parent, this._stickyMode = null, this._active = true, delete this._offsetToWindow, delete this._offsetToParent, delete this._limits)
                }
            }, {
                key: 'remove',
                value: function () {
                    var t = this;
                    this._deactivate(), o.some(function (e, x) {
                        if (e._node === t._node) return o.splice(x, 1), true
                    }), this._removed = true
                }
            }]), e
        }(),
        r = {
            stickies: o,
            Sticky: n,
            addOne: function (e) {
                if (!(e instanceof HTMLElement)) {
                    if (!e.length || !e[0]) return;
                    e = e[0]
                }
                for (var x = 0; x < o.length; x++)
                    if (o[x]._node === e) return o[x];
                return new n(e)
            },
            add: function (t) {
                if (t instanceof HTMLElement && (t = [t]), t.length) {
                    for (var i = [], e = function (e) {
                            var x = t[e];
                            return x instanceof HTMLElement ? o.some(function (e) {
                                if (e._node === x) return i.push(e), true
                            }) ? 'continue' : void i.push(new n(x)) : (i.push(void 0), 'continue')
                        }, x = 0; x < t.length; x++) e(x);
                    return i
                }
            },
            refreshAll: function () {
                o.forEach(function (e) {
                    return e.refresh()
                })
            },
            removeOne: function (x) {
                if (!(x instanceof HTMLElement)) {
                    if (!x.length || !x[0]) return;
                    x = x[0]
                }
                o.some(function (e) {
                    if (e._node === x) return e.remove(), true
                })
            },
            remove: function (t) {
                if (t instanceof HTMLElement && (t = [t]), t.length)
                    for (var e = function (e) {
                            var x = t[e];
                            o.some(function (e) {
                                if (e._node === x) return e.remove(), true
                            })
                        }, x = 0; x < t.length; x++) e(x)
            },
            removeAll: function () {
                for (; o.length;) o[0].remove()
            }
        };
    m || function () {
        function e() {
            h.pageXOffset != _.left ? (_.top = h.pageYOffset, _.left = h.pageXOffset, r.refreshAll()) : h.pageYOffset != _.top && (_.top = h.pageYOffset, _.left = h.pageXOffset, o.forEach(function (e) {
                return e._recalcPosition()
            }))
        }

        function x() {
            t = setInterval(function () {
                o.forEach(function (e) {
                    return e._fastCheck()
                })
            }, 500)
        }
        e(), h.addEventListener('scroll', e), h.addEventListener('resize', r.refreshAll), h.addEventListener('orientationchange', r.refreshAll);
        var t = void 0,
            i = void 0,
            n = void 0;
        'hidden' in c ? (i = 'hidden', n = 'visibilitychange') : 'webkitHidden' in c && (i = 'webkitHidden', n = 'webkitvisibilitychange'), n ? (c[i] || x(), c.addEventListener(n, function () {
            c[i] ? clearInterval(t) : x()
        })) : x()
    }(), 'undefined' != typeof module && module.exports ? module.exports = r : h.Stickyfill = r
}(window, document);